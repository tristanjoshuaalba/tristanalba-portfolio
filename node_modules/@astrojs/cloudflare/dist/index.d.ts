import type { AstroIntegration } from 'astro';
import type { RUNTIME } from './utils/local-runtime.js';
export type { AdvancedRuntime } from './entrypoints/server.advanced.js';
export type { DirectoryRuntime } from './entrypoints/server.directory.js';
export type Options = {
    /**
     * @deprecated Removed in v10. The 'directory' mode was discontinued because it redundantly bundles code, slowing down your site. Prefer using Astro API Endpoints over `/functions`. The new default mode is 'advanced'.
     */
    mode?: 'directory' | 'advanced';
    /**
     * @deprecated Removed in v10. This setting is obsolete as Cloudflare handles all functions in a single execution context, negating the need for multiple functions per project.
     */
    functionPerRoute?: boolean;
    imageService?: 'passthrough' | 'cloudflare' | 'compile';
    routes?: {
        /**
         * @deprecated Removed in v10. You will have two options going forward, using auto generated `_route.json` file or provide your own one in `public/_routes.json`. The previous method caused confusion and inconsistencies.
         */
        strategy?: 'auto' | 'include' | 'exclude';
        /**
         * @deprecated Removed in v10. Use `routes.extend.include` instead.
         */
        include?: string[];
        /**
         * @deprecated Removed in v10. Use `routes.extend.exclude` instead.
         */
        exclude?: string[];
    };
    /**
     * @deprecated Removed in v10. Configure bindings in `wrangler.toml`. Leveraging Cloudflare's API simplifies setup and ensures full compatibility with Wrangler configurations. Use `platformProxy` instead.
     */
    runtime?: {
        mode: 'off';
    } | {
        mode: Extract<RUNTIME, {
            type: 'pages';
        }>['mode'];
        type: Extract<RUNTIME, {
            type: 'pages';
        }>['type'];
        persistTo?: Extract<RUNTIME, {
            type: 'pages';
        }>['persistTo'];
        bindings?: Extract<RUNTIME, {
            type: 'pages';
        }>['bindings'];
    } | {
        mode: Extract<RUNTIME, {
            type: 'workers';
        }>['mode'];
        type: Extract<RUNTIME, {
            type: 'workers';
        }>['type'];
        persistTo?: Extract<RUNTIME, {
            type: 'workers';
        }>['persistTo'];
    };
    wasmModuleImports?: boolean;
};
export default function createIntegration(args?: Options): AstroIntegration;
